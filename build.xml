<project name="autocomplete-server" default="dist" basedir=".">
  <description>
        The Autocomplete Server Library.
  </description>

  <!-- set global properties for this build -->
  <property name="app.name" value="autocomplete-server"/>
  <property name="app.version" value="0.1"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="docs"  location="docs"/>
  <property name="test"  location="test"/>
  <property name="data"  location="data"/>
  <property name="data"  location="lib"/>

  <path id="path.libs">
    <pathelement path="${classpath}"/>
    <fileset dir="lib">
        <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="path.all">
    <path refid="path.libs"/>
    <pathelement location="${build}/test"/>
    <pathelement location="${build}"/>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} and ${test} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="path.libs" debuglevel="lines,vars,source" debug="on"/>
    <javac srcdir="${test}" destdir="${build}" classpathref="path.libs" debuglevel="lines,vars,source" debug="on"/>
  </target>

  <target name="dist" depends="compile,javadoc"
   description="Create binary distribution">

    <!-- Copy documentation subdirectories -->
    <delete dir="${build}/src"/>
    <delete dir="${build}/test"/>
    <delete dir="${dist}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/docs"/>

    <copy file="README.txt" todir="${build}"/>

    <copy todir="${build}/docs">
      <fileset dir="${docs}"/>
    </copy>

    <!-- Create binary JAR file -->
    <jar jarfile="${dist}/${app.name}-${app.version}.jar"
         basedir="${build}"/>

    <!-- Copy the sources in and create source jar -->
    <copy todir="${build}/src">
      <fileset dir="${src}"/>
    </copy>
    <copy todir="${build}/test">
      <fileset dir="${test}"/>
    </copy>

    <!-- Create source + binary JAR file -->
    <jar jarfile="${dist}/${app.name}-src-${app.version}.jar"
         basedir="${build}"/>
  </target>

  <target name="javadoc" depends="compile"
   description="Create Javadoc API documentation">
    <mkdir dir="${docs}/api"/>
    <javadoc sourcepath="${src}"
                destdir="${docs}/api"
           packagenames="*">
    </javadoc>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="server" depends="compile"
        description="run the autocomplete server">
       <java classname="edu.macalester.acs.server.AutocompleteServer">
         <arg value="${data}/server.txt"/>
         <arg value="10101"/>
         <classpath refid="path.all"/>
       </java>
  </target>

 
  <target name="bench" depends="compile"
        description="benchmark">
       <java classname="edu.macalester.acs.AutocompleteBenchmarker">
         <arg value="${data}/cities.txt"/>
         <classpath refid="path.all"/>
       </java>
  </target>

  <target name="test" depends="compile" description="run unit tests">
    <delete dir="${test}/reports"/>
    <mkdir dir="${test}/reports"/>

    <junit printsummary="yes" haltonfailure="yes">
      <classpath refid="path.all"/>
      <formatter type="plain"/>
    
      <batchtest todir="${test}/reports">
        <fileset dir="${test}">
          <include name="**/*Test*.java"/>
          <exclude name="**/AllTests.java"/>
        </fileset>
      </batchtest>
    
    </junit>
  </target>
</project>

